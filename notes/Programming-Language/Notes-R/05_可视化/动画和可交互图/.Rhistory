legend.text = element_text(size = 10, margin = margin(0,8,0,4,'pt')),
axis.text = element_text(size = 10),
axis.ticks.length = unit(0,'pt') # 不要坐标轴须
)
## global options
knitr::opts_chunk$set(
fig.width = 6, fig.asp = 0.618,
out.width = "80%", fig.align = "center",
fig.path = 'Figures/', fig.show = "hold",
warn = 1, warning = FALSE, message = FALSE, echo = TRUE,
comment = '', collapse = F,
cache = T, cache.comments = F, autodep = TRUE
)
## use necessary packages
library('pacman')
p_load(tidyverse, lubridate, data.table, magrittr, # 数据整理
ggthemes, showtext, gridExtra, igraph, ggraph, # 可视化
lmtest, plm, orcutt, stats, forecast, zoo, # 统计分析
rvest, httr, reticulate, # 爬虫
sqldf, DT, googleVis, # I/O
jiebaR, wordcloud2, webshot, htmlwidgets, tidytext # 文本分析
)
options(sqldf.driver = "SQLite")
## pdf中图形内部的中文字体设置
pdf.options(family = "GB1")
# 安装字体文件
# font_add('YaHei','MS YaHei.ttf')
windowsFonts(YaHei = windowsFont("Microsoft YaHei"))
showtext_auto(enable = TRUE)
# 包含图的代码块需要fig.showtext = TRUE选项
# ggplot2图形需要在主题中显式指定中文字体才能正常显示图中的中文
## 自定义一般图形主题
mytheme <- theme_economist_white() +
theme(text = element_text(family = 'YaHei'),
plot.title = element_text(face = 'bold', size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(hjust = 0, size = 10, margin = margin(2,0,0,0,'pt')),
plot.margin = margin(12,10,12,0,'pt'),
legend.position = 'top',
legend.justification = 'left',
legend.margin = margin(4,0,0,0,'pt'),
legend.key.size = unit(1,'lines'),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10, margin = margin(0,0,0,0,'pt')),
axis.text = element_text(size = 10, margin = margin(2,0,2,0,'pt')),
axis.ticks.length = unit(-4,'pt')
)
# 自定义柱状图主题
theme_bar <- theme_economist_white() +
theme(text = element_text(family = 'YaHei'), # 所有的文本字体
plot.title = element_text(face = 'bold', size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(hjust = 0, size = 10,
margin = margin(0,0,0,0,'pt')),
plot.margin = margin(12,0,12,10,'pt'),
legend.position = 'top',
legend.justification = 'left',
legend.margin = margin(4,0,0,0,'pt'),
legend.key.size = unit(0.7,'lines'),
legend.title = element_blank(),
legend.text = element_text(size = 10, margin = margin(0,8,0,4,'pt')),
axis.text = element_text(size = 10),
axis.ticks.length = unit(0,'pt') # 不要坐标轴须
)
library(googleVis)
# 表格
PopTable <- gvisTable(Population,
formats=list(Population="#,###",
'% of World Population'='#.#%'),
options=list(page='enable'), # 允许分页
chartid = 'table')
plot(PopTable)
cat(PopTable$html$chart, file="table.html")
# 地图
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"),
chartid = 'Geo')
plot(Geo)
AndrewGeo <- gvisGeoMap(Andrew,
locationvar="LatLong",
numvar="Speed_kt",
hovervar="Category",
options=list(height=350,
region="US",
dataMode="markers"))
plot(AndrewGeo)
# Google地图
AndrewMap <- gvisMap(Andrew, "LatLong" , "Tip",
options=list(showTip=TRUE,
showLine=TRUE,
enableScrollWheel=TRUE,
mapType='terrain',
useMapTypeControl=TRUE))
plot(AndrewMap)
# 组织结构图
Org <- gvisOrgChart(Regions,
options=list(width=600, height=250,
size='large', allowCollapse=TRUE))
plot(Org)
# 混合图表
G <- gvisGeoChart(Exports, "Country", "Profit",
options=list(width=300, height=300))
T <- gvisTable(Exports,
options=list(width=220, height=300))
GT <- gvisMerge(G,T, horizontal=TRUE)
plot(GT)
cat(GT$html$chart,file="GT.html") #保存js代码
# 动态图
library(gapminder)
ani_plot <- gvisMotionChart(gapminder, xvar = 'gdpPercap', yvar = 'lifeExp', timevar = 'year', colorvar = 'continent', idvar = 'country', sizevar = 'pop', chartid = 'animation')
plot(ani_plot) #通过google服务器发布
cat(ani_plot$html$chart,file="ani_plot.html")
# 动态图
library(gapminder)
ani_plot <- gvisMotionChart(gapminder, xvar = 'gdpPercap', yvar = 'lifeExp', timevar = 'year', colorvar = 'continent', idvar = 'country', sizevar = 'pop', chartid = 'animation')
plot(ani_plot) #通过google服务器发布
cat(ani_plot$html$chart,file="ani_plot.html")
# gganimate 包
主要函数：
- `transition_*()`: 定义动画是根据哪个变量进行”动”.
- `view_*()`: 定义标尺的位置，位置比例应如何沿动画变化。
- `shadow_*()`: 定义如何在给定时间点呈现来自其他时间点的数据。
- `enter_*()/exit_*()`: 定义新数据应如何显示以及在动画过程中旧数据应如何消失。
- `ease_aes()`: 定义了在过渡期间应该如何缓和两点位置变化的方式。ease_aes('linear')能使点的变化更平滑
```{r}
# ggplot + gganimate 动态图
library(gganimate)
theme_set(theme_bw()) # 配合动画的默认主题
library(gapminder)
head(gapminder)
# ggplot + gganimate 动态图
library(gganimate)
theme_set(theme_bw()) # 配合动画的默认主题
library(gapminder)
head(gapminder)
p <- ggplot(mtcars, aes(factor(cyl), mpg)) +
geom_boxplot() +
# Here comes the gganimate code
transition_states(
gear,
transition_length = 2,state_length = 1)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
p
# ggplot + gganimate 动态图
library(gganimate)
theme_set(theme_bw()) # 配合动画的默认主题
library(gapminder)
head(gapminder)
# 刻面
p + facet_wrap(~continent) +
transition_time(year) +
labs(title = "Year: {frame_time}") +
ease_aes('linear')
## global options
knitr::opts_chunk$set(
fig.width = 6, fig.asp = 0.618,
out.width = "80%", fig.align = "center",
fig.path = 'Figures/', fig.show = "hold",
warn = 1, warning = FALSE, message = FALSE, echo = TRUE,
comment = '', collapse = F,
cache = T, cache.comments = F, autodep = TRUE
)
## use necessary packages
library('pacman')
p_load(tidyverse, lubridate, data.table, magrittr, # 数据整理
ggthemes, showtext, gridExtra, igraph, ggraph, # 可视化
lmtest, plm, orcutt, stats, forecast, zoo, # 统计分析
rvest, httr, reticulate, # 爬虫
sqldf, DT, googleVis, # I/O
jiebaR, wordcloud2, webshot, htmlwidgets, tidytext # 文本分析
)
options(sqldf.driver = "SQLite")
## pdf中图形内部的中文字体设置
pdf.options(family = "GB1")
# 安装字体文件
# font_add('YaHei','MS YaHei.ttf')
windowsFonts(YaHei = windowsFont("Microsoft YaHei"))
showtext_auto(enable = TRUE)
# 包含图的代码块需要fig.showtext = TRUE选项
# ggplot2图形需要在主题中显式指定中文字体才能正常显示图中的中文
## 自定义一般图形主题
mytheme <- theme_economist_white() +
theme(text = element_text(family = 'YaHei'),
plot.title = element_text(face = 'bold', size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(hjust = 0, size = 10, margin = margin(2,0,0,0,'pt')),
plot.margin = margin(12,10,12,0,'pt'),
legend.position = 'top',
legend.justification = 'left',
legend.margin = margin(4,0,0,0,'pt'),
legend.key.size = unit(1,'lines'),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10, margin = margin(0,0,0,0,'pt')),
axis.text = element_text(size = 10, margin = margin(2,0,2,0,'pt')),
axis.ticks.length = unit(-4,'pt')
)
# 自定义柱状图主题
theme_bar <- theme_economist_white() +
theme(text = element_text(family = 'YaHei'), # 所有的文本字体
plot.title = element_text(face = 'bold', size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(hjust = 0, size = 10,
margin = margin(0,0,0,0,'pt')),
plot.margin = margin(12,0,12,10,'pt'),
legend.position = 'top',
legend.justification = 'left',
legend.margin = margin(4,0,0,0,'pt'),
legend.key.size = unit(0.7,'lines'),
legend.title = element_blank(),
legend.text = element_text(size = 10, margin = margin(0,8,0,4,'pt')),
axis.text = element_text(size = 10),
axis.ticks.length = unit(0,'pt') # 不要坐标轴须
)
library(googleVis)
# 表格
PopTable <- gvisTable(Population,
formats=list(Population="#,###",
'% of World Population'='#.#%'),
options=list(page='enable'), # 允许分页
chartid = 'table')
plot(PopTable)
cat(PopTable$html$chart, file="table.html")
# 地图
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"),
chartid = 'Geo')
plot(Geo)
AndrewGeo <- gvisGeoMap(Andrew,
locationvar="LatLong",
numvar="Speed_kt",
hovervar="Category",
options=list(height=350,
region="US",
dataMode="markers"))
plot(AndrewGeo)
# Google地图
AndrewMap <- gvisMap(Andrew, "LatLong" , "Tip",
options=list(showTip=TRUE,
showLine=TRUE,
enableScrollWheel=TRUE,
mapType='terrain',
useMapTypeControl=TRUE))
plot(AndrewMap)
# 组织结构图
Org <- gvisOrgChart(Regions,
options=list(width=600, height=250,
size='large', allowCollapse=TRUE))
plot(Org)
# 混合图表
G <- gvisGeoChart(Exports, "Country", "Profit",
options=list(width=300, height=300))
T <- gvisTable(Exports,
options=list(width=220, height=300))
GT <- gvisMerge(G,T, horizontal=TRUE)
plot(GT)
cat(GT$html$chart,file="GT.html") #保存js代码
# 动态图
library(gapminder)
ani_plot <- gvisMotionChart(gapminder, xvar = 'gdpPercap', yvar = 'lifeExp', timevar = 'year', colorvar = 'continent', idvar = 'country', sizevar = 'pop', chartid = 'animation')
plot(ani_plot) #通过google服务器发布
cat(ani_plot$html$chart,file="ani_plot.html")
# ggplot + gganimate 动态图
library(gganimate)
theme_set(theme_bw()) # 配合动画的默认主题
library(gapminder)
head(gapminder)
library(dslabs)
data(gapminder)
west = c("Western Europe","Northern Europe","Southern Europe",
"Northern America","Australia and New Zealand")
gapminder = gapminder %>%
mutate(group = case_when(
.$region %in% west~"The West",
.$region %in% c("Eastern Asia","South-Eastern Asia")~"East Asia",
.$region %in% c("Caribbean","Central America","South America")~"Latin America",
.$continent=="Africa"&.$region!="Northern Africa"~"Sub-Saharan Africa",
TRUE ~ "Others"))
gapminder = gapminder %>%
mutate(group=factor(group,levels=rev(c("Others","Latin America","East Asia","Sub-Saharan Africa","The West"))))
theme_set(theme_bw(base_size=16))
years = seq(1962,2013)
p = filter(gapminder,year%in%years&!is.na(group)&
!is.na(fertility)&!is.na(life_expectancy))%>%
mutate(population_in_millions = population/10^6)%>%
ggplot(aes(fertility,y=life_expectancy,
col=group,size=population_in_millions))+
geom_point(alpha=0.8)+
guides(size=FALSE)+
theme(legend.title=element_blank())+
coord_cartesian(ylim=c(30,85))+
# Here comes the gganimate specific bits
labs(title = 'Year: {frame_time}',x = 'Fertility rate(births per woman)', y = 'Life Expectancy') +
transition_time(year) +
ease_aes('linear')
p
anim_save(filename = "test2.gif", animation = last_animation(), dpi = 600)
anim_save(filename = "test2.mp4", animation = last_animation())
library(animation)
library(lattice)
saveGIF({
ani.options(interval=.1,
convert = shQuote('d:/program files/ImageMagick-6.7.6-Q16/convert.exe'))
for (i in seq(0,360,by=5)) {
p <- wireframe(volcano, shade = TRUE,
aspect = c(61/87, 0.4),
light.source = c(10,0,10),
screen = list(z = i, x = -60))
print(p)
}
})
xfun::pkg_load2(c('animation', 'gganimate'))
library(animation)
ani.options(nmax = 50)
grad.desc()
library(animation)
ani.options(nmax = 50)
grad.desc()
xfun::pkg_load2(c('animation', 'gganimate'))
library(animation)
ani.options(nmax = 50)
grad.desc()
xfun::pkg_load2(c('animation', 'gganimate'))
library(animation)
ani.options(nmax = 50)
grad.desc()
xfun::pkg_load2(c('animation', 'gganimate'))
library(animation)
ani.options(nmax = 50)
grad.desc()
## global options
knitr::opts_chunk$set(
fig.width = 6, fig.asp = 0.618,
out.width = "80%", fig.align = "center",
fig.path = 'Figures/', fig.show = "hold",
warn = 1, warning = FALSE, message = FALSE, echo = TRUE,
comment = '', collapse = F,
cache = T, cache.comments = F, autodep = TRUE
)
## use necessary packages
library('pacman')
p_load(tidyverse, lubridate, data.table, magrittr, # 数据整理
ggthemes, showtext, gridExtra, igraph, ggraph, # 可视化
lmtest, plm, orcutt, stats, forecast, zoo, # 统计分析
rvest, httr, reticulate, # 爬虫
sqldf, DT, googleVis, # I/O
jiebaR, wordcloud2, webshot, htmlwidgets, tidytext # 文本分析
)
options(sqldf.driver = "SQLite")
## pdf中图形内部的中文字体设置
pdf.options(family = "GB1")
# 安装字体文件
# font_add('YaHei','MS YaHei.ttf')
windowsFonts(YaHei = windowsFont("Microsoft YaHei"))
showtext_auto(enable = TRUE)
# 包含图的代码块需要fig.showtext = TRUE选项
# ggplot2图形需要在主题中显式指定中文字体才能正常显示图中的中文
## 自定义一般图形主题
mytheme <- theme_economist_white() +
theme(text = element_text(family = 'YaHei'),
plot.title = element_text(face = 'bold', size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(hjust = 0, size = 10, margin = margin(2,0,0,0,'pt')),
plot.margin = margin(12,10,12,0,'pt'),
legend.position = 'top',
legend.justification = 'left',
legend.margin = margin(4,0,0,0,'pt'),
legend.key.size = unit(1,'lines'),
legend.title = element_text(size = 12),
legend.text = element_text(size = 10, margin = margin(0,0,0,0,'pt')),
axis.text = element_text(size = 10, margin = margin(2,0,2,0,'pt')),
axis.ticks.length = unit(-4,'pt')
)
# 自定义柱状图主题
theme_bar <- theme_economist_white() +
theme(text = element_text(family = 'YaHei'), # 所有的文本字体
plot.title = element_text(face = 'bold', size = 14),
plot.subtitle = element_text(size = 12),
plot.caption = element_text(hjust = 0, size = 10,
margin = margin(0,0,0,0,'pt')),
plot.margin = margin(12,0,12,10,'pt'),
legend.position = 'top',
legend.justification = 'left',
legend.margin = margin(4,0,0,0,'pt'),
legend.key.size = unit(0.7,'lines'),
legend.title = element_blank(),
legend.text = element_text(size = 10, margin = margin(0,8,0,4,'pt')),
axis.text = element_text(size = 10),
axis.ticks.length = unit(0,'pt') # 不要坐标轴须
)
xfun::pkg_load2(c('animation', 'gganimate'))
library(animation)
ani.options(nmax = 50)
grad.desc()
library(ggplot2)
library(gganimate)
ggplot(mtcars, aes(factor(cyl), mpg)) +
geom_boxplot() +
# Here comes the gganimate code
transition_states(
gear,
transition_length = 2,
state_length = 1
) +
enter_fade() +
exit_shrink() +
ease_aes('sine-in-out')
library(googleVis)
# 表格
PopTable <- gvisTable(Population,
formats=list(Population="#,###",
'% of World Population'='#.#%'),
options=list(page='enable'), # 允许分页
chartid = 'table')
plot(PopTable)
cat(PopTable$html$chart, file="table.html")
# 地图
Geo=gvisGeoChart(Exports, locationvar="Country",
colorvar="Profit",
options=list(projection="kavrayskiy-vii"),
chartid = 'Geo')
plot(Geo)
AndrewGeo <- gvisGeoMap(Andrew,
locationvar="LatLong",
numvar="Speed_kt",
hovervar="Category",
options=list(height=350,
region="US",
dataMode="markers"))
plot(AndrewGeo)
# Google地图
AndrewMap <- gvisMap(Andrew, "LatLong" , "Tip",
options=list(showTip=TRUE,
showLine=TRUE,
enableScrollWheel=TRUE,
mapType='terrain',
useMapTypeControl=TRUE))
plot(AndrewMap)
# 组织结构图
Org <- gvisOrgChart(Regions,
options=list(width=600, height=250,
size='large', allowCollapse=TRUE))
plot(Org)
# 混合图表
G <- gvisGeoChart(Exports, "Country", "Profit",
options=list(width=300, height=300))
T <- gvisTable(Exports,
options=list(width=220, height=300))
GT <- gvisMerge(G,T, horizontal=TRUE)
plot(GT)
cat(GT$html$chart,file="GT.html") #保存js代码
# 动态图
library(gapminder)
ani_plot <- gvisMotionChart(gapminder, xvar = 'gdpPercap', yvar = 'lifeExp', timevar = 'year', colorvar = 'continent', idvar = 'country', sizevar = 'pop', chartid = 'animation')
plot(ani_plot) #通过google服务器发布
cat(ani_plot$html$chart,file="ani_plot.html")
# ggplot + gganimate 动态图
library(gganimate)
theme_set(theme_bw()) # 配合动画的默认主题
library(gapminder)
head(gapminder)
p <- ggplot(mtcars, aes(factor(cyl), mpg)) +
geom_boxplot() +
# Here comes the gganimate code
transition_states(
gear,
transition_length = 2,state_length = 1)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
p
# ggplot + gganimate 动态图
library(gganimate)
theme_set(theme_bw()) # 配合动画的默认主题
library(gapminder)
head(gapminder)
p <- ggplot(mtcars, aes(factor(cyl), mpg)) +
geom_boxplot() +
# Here comes the gganimate code
transition_states(
gear,
transition_length = 2,state_length = 1)
p <- ggplot(
gapminder,
aes(x = gdpPercap, y=lifeExp, size = pop, colour = country)
) +
geom_point(show.legend = FALSE, alpha = 0.7) +
scale_color_viridis_d() +
scale_size(range = c(2, 12)) +
scale_x_log10() +
labs(x = "GDP per capita", y = "Life expectancy")
p
# 动画
p + transition_time(year) +
labs(title = "Year: {frame_time}")
anim_save(filename = "test.gif", animation = last_animation(), dpi = 600)
anim_save(filename = "test.mp4", animation = last_animation()) # 这条指`令有时需要手动操作一次才能正常保存
