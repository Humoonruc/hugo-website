?bind_rows()
library(tidyverse)
?bind_rows()
library('pacman')
p_load(tidyverse)
flip <- function() sample(c("T", "H"), 1)
flips <- 0
nheads <- 0
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
flip <- function() sample(c("T", "H"), 1)
flips <- 0
nheads <- 0
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
flips
flip <- function() sample(c("T", "H"), 1)
flips <- 0
nheads <- 0
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
flips
flips
flips
flips
flips
flip <- function() sample(c("T", "H"), 1)
flips <- 0
nheads <- 0
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
flips
flip <- function() sample(c("T", "H"), 1)
throw <- function(){
flips <- 0
nheads <- 0
while (nheads < 3) {
if (flip() == "H") {
nheads <- nheads + 1
} else {
nheads <- 0
}
flips <- flips + 1
}
return(flips)
}
throw
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
throw()
df <- tibble(
a = rnorm(10),
b = rnorm(10),
c = rnorm(10),
d = rnorm(10)
)
## 求df各列的中位数
# 预先为输出分配空间，长度为ncol(df)的向量
output <- vector("double", ncol(df))
# 循环计算
for (i in seq_along(df)) {
# seq_along(df)即1:length(df)，这样写最大的好处是兼容df长度为0的情况
output[[i]] <- median(df[[i]])
# 要记住使用"[["，而不是"["，因为前者是一个向量，后者是一个tibble
}
output
map_dbl(df, mean)
map_dbl(df, median)
df %>% map_dbl(mean)
map_dbl(df, mean, trim = 0.5)
models <- mtcars %>%
split(.$cyl) %>%
map(function(df) lm(mpg ~ wt, data = df))
View(models)
models[["4"]]
mtcars %>% split(.$cyl)
models %>%
map(summary) %>%
map_dbl("r.squared")
x <- list(list(1, 2, 3), list(4, 5, 6), list(7, 8, 9))
x %>% map_dbl(2)
map2(mu, sigma, rnorm, n = 5) %>% str()
mu <- list(5, 10, -3)
mu %>%
map(rnorm, n = 5) %>%
str()
sigma <- list(1, 5, 10)
map2(mu, sigma, rnorm, n = 5) %>% str()
args1 <- list(n, mu, sigma)
args1 %>%
pmap(rnorm) %>%
str()
mu <- list(5, 10, -3)
mu %>%
map(rnorm, n = 5) %>%
str()
sigma <- list(1, 5, 10)
map2(mu, sigma, rnorm, n = 5) %>% str()
n <- list(5, 10, 100)
args1 <- list(n, mu, sigma)
args1 %>%
pmap(rnorm) %>%
str()
?rnorm()
x <- list(1, "a", 3)
x %>%
walk(print)
library('pacman')
p_load(tidyverse, ggplot2)
plots <- mtcars %>%
split(.$cyl) %>%
map(~ggplot(., aes(mpg, wt)) + geom_point())
View(plots)
plots[["4"]]
plots[["6"]]
names(plots)
x <- sample(10)
x
x %>% accumulate(`+`)
cumsum(x)
x %>% accumulate(`+`)
cumsum(x)
x %>% accumulate(`*`)
blogdown:::preview_site()
## global options
knitr::opts_chunk$set(
fig.width = 6, fig.asp = 0.618,
out.width = "80%", fig.align = "center",
fig.path = 'Figures/', fig.show = "hold",
warn = 1, warning = FALSE, message = FALSE, echo = TRUE,
comment = '', collapse = F,
cache = T, cache.comments = F, autodep = TRUE
)
## use necessary packages
library('pacman')
p_load(tidyverse)
set.seed(1)
x<-1:10;
y<-5:-4;
z<-round(runif(10,-5,5)); z
mapply(max,x,y,z)
set.seed(1)
x<-1:10;
y<-5:-4;
z<-round(runif(10,-5,5)); z
a <- mapply(max,x,y,z)
a
firstlist<-list(A=matrix(1:16,4),B=matrix(1:16,2))
secondlist<-list(A=matrix(1:16,4),B=matrix(1:16,8))
mapply(identical,firstlist,secondlist)
d <- data.frame(list(gender = c("M", "M", "F", "M", "F", "F"),
age = c(47, 59, 21, 32, 33, 24) ,
income = c(55000, 88000, 32450, 76500, 123000, 45650)))
d
tapply(d$income, d$gender, mean)
x<-1:10
t<-round(runif(10,1,100)%%2);t
tapply(x,t,sum)
aggregate(price ~ cut + color, diamonds,mean)
blogdown:::preview_site()
?fwrite
?fread
library(data.table)
?fread
?fwrite
?write_excel_csv
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
blogdown:::preview_site()
knit_with_parameters('C:/Users/Humoonruc/OneDrive/ICT/Website/static/notes/R课程笔记/04_结构语句及函数/管道操作.Rmd', encoding = 'UTF-8')
